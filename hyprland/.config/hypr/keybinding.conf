# l -> locked, will also work when an input inhibitor (e.g. a lockscreen) is active.
# r -> release, will trigger on release of a key.
# e -> repeat, will repeat when held.
# n -> non-consuming, key/mouse events will be passed to the active window in addition to triggering the dispatcher.
# m -> mouse, see below.
# t -> transparent, cannot be shadowed by other binds.
# i -> ignore mods, will ignore modifiers.
# s -> separate, will arbitrarily combine keys between each mod/key, see [Keysym combos](#keysym-combos) above.
# d -> has description, will allow you to write a description for your bind.


$mainMod = SUPER

###### OPENING APPS #######
$terminal = ghostty
$fm = thunar
$browser = floorp
# App opening submap
bind = $mainMod, N, submap, windownew
submap = windownew
# Note about submaps:
# If you don't explicitly exit out of them, they remain activated.
# By adding a second bind to to the same key, you can execute them in order.
# So, add a second command that resets the submap
bind = , T, exec, $terminal
bind = , F, exec, $fm
bind = , I, exec, $browser
bindd = , N, Application launcher, exec, rofi -show drun -theme grid-launcher
# exit out of submap after every press.
bind = , catchall, submap, reset
# Use `reset` to go back to the global submap
bind = , escape, submap, reset
# Reset the submap, which will return to the global submap
submap = reset

# Secondary way to open a terminal, say in case no windows key.
bind = $mainMod, escape, exec, $terminal 
bind = Control_L, escape, exec, $terminal 

####### WORKSPACES #######
# ws numbers
$homeN = 1
$musicN = 2
$socialOneN = 3
$socialTwoN = 4
$calendarN = 5
$mailN = 6
$alphaN = 10
$betaN = 11
$gammaN = 12
$deltaN = 13
$fastOneN = 100
$fastTwoN = 101
$specialN = 105

# ws keys
$homeK = H # Home
$musicK = B # Bops
$socialOneK = S # Social
$socialTwoK = C # Chat
$calendarK = T # Timetable
$mailK = M # Mail
$alphaK = F
$betaK = O
$gammaK = U
$deltaK = Q # TODO: change to underscore (above pinky) when I figure out how to do so.
$fastOneK = P
$fastTwoK = J # switch to (
$specialK = Y


# Switch to workspace
bind = $mainMod, S, submap, switchtoworkspace
submap = switchtoworkspace
bind = , $homeK, workspace, $homeN
bind = , $musicK, workspace, $musicN
bind = , $socialOneK, workspace, $socialOneN
bind = , $socialTwoK, workspace, $socialTwoN
bind = , $calendarK, workspace, $calendarN
# exit out of submap after every press.
bind = , catchall, submap, reset
submap = reset

# quick workspaces are not behind the submap, they are direct mappings
bind = $mainMod, $fastOneK, workspace, $fastOneN
bind = $mainMod, $fastTwoK, workspace, $fastTwoN

# Example special workspace (scratchpad)
bind = $mainMod, $specialK, togglespecialworkspace, magic
bind = $mainMod SHIFT, $skecialK, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

####### FOCUS SWITCH #######
# Arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Extend layer but now without the caps
bind = $mainMod, H, movefocus, l
bind = $mainMod, E, movefocus, r
bind = $mainMod, O, movefocus, u
bind = $mainMod, A, movefocus, d


###### MODIFY WORKSPACE ########
# close focused window
bind = $mainMod, Q, killactive,
# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bind = $mainMod, D, submap, modifyworkspace
submap = modifyworkspace
bind = , F, togglefloating
bind = , P, pseudo
bind = , S, togglesplit
# exit out of submap after every press.
bind = , catchall, submap, reset
submap = reset

##### MULTIMEDIA ######

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindl = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous
bindl =, XF86AudioPlay, exec, playerctl play-pause
bindl =, XF86AudioStop, exec, playerctl stop

# Shift and volume does mpd
bindel = Shift_L, XF86AudioRaiseVolume, exec, mpc volume +5
bindel = Shift_L, XF86AudioLowerVolume, exec, mpc volume -5

########## MISC ##########
# Exit hyprland
bind = $mainMod, X, exit,
